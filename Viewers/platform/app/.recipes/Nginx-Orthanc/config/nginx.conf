worker_processes 2;
error_log /var/logs/nginx/mydomain.error.log;
pid /var/run/nginx.pid;
include /usr/share/nginx/modules/*.conf; # See /usr/share/doc/nginx/README.dynamic.

events {
  worker_connections 1024; ## Default: 1024
  use epoll; # http://nginx.org/en/docs/events.html
  multi_accept on; # http://nginx.org/en/docs/ngx_core_module.html#multi_accept
}

# Core Modules Docs:
# http://nginx.org/en/docs/http/ngx_http_core_module.html
http {
  include '/etc/nginx/mime.types';
  default_type application/octet-stream;

  keepalive_timeout 180;
  keepalive_requests 1000;
  proxy_read_timeout 300s;
  proxy_connect_timeout 300s;
  tcp_nopush on;
  tcp_nodelay on;
  client_max_body_size 500M;


  # Nginx `listener` block
  server {
    listen [::]:1026 default_server;
    listen 1026;
    server_name nninter.ccibonn.ai;
  
    #if ($http_cf_visitor !~ '"scheme":"https"') {
    #  return 301 https://$host$request_uri;
    #}

    gzip on;
    gzip_vary on;                     # send Vary: Accept-Encoding
    gzip_min_length 1024;             # don’t bother for tiny payloads
    gzip_comp_level 6;                # 6 is a good perf/ratio tradeoff
    gzip_proxied any;                 # <— IMPORTANT for proxied responses
    gzip_types
      application/json
      application/octet-stream
      multipart/form-data
      text/css
      application/javascript
      image/svg+xml;
    etag on;
    client_max_body_size 500M;

    # Reverse Proxy for `orthanc` APIs (including DICOMWeb)
    #
    location /pacs/ {

      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      client_max_body_size 500M;

      expires 0;
      add_header Cache-Control private;

      # Add CORS headers
      # Note: uncomment the following line to allow all domains to access the Orthanc APIs
      # You should actually only allow the domains you trust to access the APIs
      add_header 'Access-Control-Allow-Origin' '*' always;

      proxy_pass http://orthanc:8042/;

      # By default, this endpoint is protected by CORS (cross-origin-resource-sharing)
      # You can add headers to allow other domains to request this resource.
      # See the "Updating CORS Settings" example below
    }

    location /monai/ {

      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_pass http://monai_sam2:8002;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      gzip off;
      #proxy_set_header Accept-Encoding "";  # Disable gzip encoding
      
      # generous timeouts for inference
      proxy_connect_timeout 300s;
      proxy_read_timeout    300s;

      client_max_body_size 500M;

      #expires 0;
      #add_header Cache-Control private;

      # Add CORS headers
      # Note: uncomment the following line to allow all domains to access the Orthanc APIs
      # You should actually only allow the domains you trust to access the APIs
      add_header 'Access-Control-Allow-Origin' '*' always;



      # By default, this endpoint is protected by CORS (cross-origin-resource-sharing)
      # You can add headers to allow other domains to request this resource.
      # See the "Updating CORS Settings" example below
    }

    # Do not cache sw.js, required for offline-first updates.
    location /sw.js {
      add_header Cache-Control "no-cache";
      proxy_cache_bypass $http_pragma;
      proxy_cache_revalidate on;
      expires off;
      access_log off;
    }


    # Single Page App
    # Try files, fallback to index.html
    #
    location / {
      root /var/www/html;
      index index.html;
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-store, no-cache, must-revalidate";
      add_header 'Access-Control-Allow-Origin' '*' always;

      #auth_basic           "Login Required";
      #auth_basic_user_file /etc/nginx/.htpasswd;

      client_max_body_size 800M;
    }
      error_page  405     =200 $uri;
  }
}
